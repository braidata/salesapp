generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider     = "mysql"
  url          = env("DATABASE_URL")
  relationMode = "prisma"
}

model order_items {
  id       Int     @id @default(autoincrement())
  order_id Int
  sku      String  @db.VarChar(255)
  name     String? @db.VarChar(255)
  price    String? @db.VarChar(255)
  quantity String  @db.VarChar(255)
  discount String? @db.VarChar(255)
  orders   orders  @relation(fields: [order_id], references: [id])

  @@index([order_id])
}

model orders {
  id                                  Int           @id @default(autoincrement())
  customer_name                       String?       @default("sin detalle contacto") @db.VarChar(255)
  customer_rut                        String?       @default("sin detalle contacto") @db.VarChar(255)
  customer_email                      String?       @default("sin detalle contacto") @db.VarChar(255)
  customer_phone                      String?       @default("sin detalle contacto") @db.VarChar(255)
  billing_street                      String        @db.VarChar(255)
  billing_number                      String        @db.VarChar(255)
  billing_department                  String?       @default("sin n depto") @db.VarChar(255)
  billing_region                      String        @db.VarChar(255)
  billing_city                        String        @db.VarChar(255)
  billing_commune                     String        @db.VarChar(255)
  billing_zip_code                    String?       @default("sin zip code") @db.VarChar(255)
  billing_company_name                String        @db.VarChar(255)
  billing_company_rut                 String        @db.VarChar(255)
  billing_company_business            String        @db.VarChar(255)
  Shipping_Tipo_de_Despacho           String?       @default("sin envio") @db.VarChar(255)
  Shipping_Fecha_de_Despacho_o_Retiro String?       @default("sin envio") @db.VarChar(255)
  Shipping_Rut_Retira                 String?       @default("sin envio") @db.VarChar(255)
  Shipping_Nombre_Retira              String?       @default("sin envio") @db.VarChar(255)
  Shipping_Observacion                String?       @default("sin envio") @db.VarChar(255)
  Shipping_flete                      String?       @default("sin envio") @db.VarChar(255)
  customer_last_name                  String?       @default("sin datos de contacto") @db.VarChar(255)
  user                                String        @db.VarChar(255)
  dealId                              String        @unique @db.VarChar(255)
  Shipping_city                       String?       @default("sin envio") @db.VarChar(255)
  Shipping_commune                    String?       @default("sin envio") @db.VarChar(255)
  Shipping_department                 String?       @default("sin envio") @db.VarChar(255)
  Shipping_number                     String?       @default("sin envio") @db.VarChar(255)
  Shipping_region                     String?       @default("sin envio") @db.VarChar(255)
  Shipping_street                     String?       @default("sin envio") @db.VarChar(255)
  Shipping_zip_code                   String?       @default("sin envio") @db.VarChar(255)
  order_date                          DateTime?     @default(now())
  ownerId                             Int?
  sapID                               String?       @db.VarChar(255)
  statusSAP                           String?       @default("Procesando") @db.VarChar(255)
  dateSAP                             String?       @db.VarChar(255)
  ownerIdM                            String?
  team                                String?       @db.VarChar(255)
  OC                                  String?       @db.VarChar(255)
  almacen                             String?       @db.VarChar(255)
  centro                              String?       @db.VarChar(255)
  channel                             String?       @db.VarChar(255)
  order_class                         String?       @db.VarChar(255)
  respuestaSAP                        String?       @db.Text
  status                              String?       @default("1") @db.VarChar(255)
  creator                             String?       @db.VarChar(255)
  payments                            payments[]
  order_items                         order_items[]
  posts                               posts[]
}

model payments {
  id             Int     @id @default(autoincrement())
  order_id       Int
  method         String? @default("sin pago") @db.VarChar(255)
  payment_amount String? @default("sin pago") @db.VarChar(255)
  type           String? @default("sin pago") @db.VarChar(255)
  orders         orders? @relation(fields: [order_id], references: [id])

  @@index([order_id])
}

model payments_validator {
  id                 Int     @id @default(autoincrement())
  order_id           Int
  payment_method     String? @default("sin datos") @db.VarChar(255)
  authorization_code String? @default("sin datos") @db.VarChar(255)
  payment_count      String? @default("sin datos") @db.VarChar(255)
  payment_amount     String? @default("sin datos") @db.VarChar(255)
  payment_date       String? @default("sin datos") @db.VarChar(255)
  rut_pagador        String? @default("sin datos") @db.VarChar(255)
  observation        String? @default("sin datos") @db.VarChar(255)
  status             String? @default("sin datos") @db.VarChar(255)
  order_date         String? @default("sin datos") @db.VarChar(255)
  validation_date    String? @default("sin datos") @db.VarChar(255)
  team               String? @default("sin datos") @db.VarChar(255)
  banco_destino      String? @default("sin datos") @db.VarChar(255)
  imagenUrl          String? @default("sin datos") @db.VarChar(255)
  textoImg           String? @default("sin datos") @db.VarChar(512)
  rut_cliente        String? @default("sin datos") @db.VarChar(255)
  createdBy          String?
  validatedBy        String?
  editedBy           String?
  contId             String? @default("sin datos") @db.VarChar(255)
  sapId              String? @default("sin datos") @db.VarChar(255)
  posts              posts[]
}

model users {
  id               Int            @id @default(autoincrement())
  name             String         @db.VarChar(255)
  email            String         @unique @db.VarChar(255)
  ownerId          Int            @unique
  password         String?        @db.VarChar(255)
  image            String?
  permissions      String?        @db.VarChar(255)
  rol              String?        @db.VarChar(255)
  team             String?        @db.VarChar(255)
  rut              String?        @db.VarChar(255)
  notifications    Notification[]
  messagesSent     Message[]      @relation("MessageSender")
  messagesReceived Message[]      @relation("MessageReceiver")
  conversations    Conversation[] @relation("UserConversations")
  comments         Comment[]
  posts            posts[]
}

model Notification {
  id        Int      @id @default(autoincrement())
  userId    Int
  content   String
  status    String   @default("unread")
  category  String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  user      users    @relation(fields: [userId], references: [id])

  @@index([userId])
}

model Message {
  id             Int           @id @default(autoincrement())
  senderId       Int
  receiverId     Int
  content        String
  status         String        @default("unread")
  category       String
  createdAt      DateTime      @default(now())
  updatedAt      DateTime      @updatedAt
  conversationId Int?
  sender         users         @relation("MessageSender", fields: [senderId], references: [id])
  receiver       users         @relation("MessageReceiver", fields: [receiverId], references: [id])
  conversation   Conversation? @relation(fields: [conversationId], references: [id])

  @@index([senderId])
  @@index([receiverId])
  @@index([conversationId])
}

model Conversation {
  id        Int       @id @default(autoincrement())
  title     String?
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
  postId    Int?
  users     users[]   @relation("UserConversations")
  messages  Message[]
  post      posts?    @relation(fields: [postId], references: [id])

  @@index([postId])
}

model Comment {
  id        Int      @id @default(autoincrement())
  userId    Int
  postId    Int
  content   String
  status    String   @default("active")
  category  String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  user      users    @relation(fields: [userId], references: [id])
  post      posts    @relation(fields: [postId], references: [id])

  @@index([userId])
  @@index([postId])
}

model posts {
  id                 Int                 @id @default(autoincrement())
  title              String
  content            String
  authorId           Int
  createdAt          DateTime            @default(now())
  updatedAt          DateTime            @updatedAt
  orderId            Int?
  paymentValidatorId Int?
  author             users               @relation(fields: [authorId], references: [id])
  order              orders?             @relation(fields: [orderId], references: [id])
  paymentValidator   payments_validator? @relation(fields: [paymentValidatorId], references: [id])
  comments           Comment[]
  conversations      Conversation[]

  @@index([authorId])
  @@index([orderId])
  @@index([paymentValidatorId])
}

model aa74cd_95de_538d_992c_3f96ecb7beae_20230802205640_vrepl {
  id       Int     @id @default(autoincrement())
  order_id Int
  sku      String  @db.VarChar(255)
  name     String? @db.VarChar(255)
  price    String? @db.VarChar(255)
  quantity String  @db.VarChar(255)

  @@index([order_id], map: "order_items_order_id_idx")
  @@map("_69aa74cd_95de_538d_992c_3f96ecb7beae_20230802205640_vrepl")
}

model UserConversations {
  A Int
  B Int

  @@unique([A, B], map: "_UserConversations_AB_unique")
  @@index([B], map: "_UserConversations_B_index")
  @@map("_UserConversations")
}
